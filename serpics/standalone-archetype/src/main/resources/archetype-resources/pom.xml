<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
		
	<artifactId>${artifactId}</artifactId>
	<packaging>war</packaging>
	<groupId>${groupId}</groupId>
	<name>standalone</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<vaadin.version>7.4.0</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
	</properties>
  
  

	<version>${version}</version>
	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
			</snapshots>
		</repository>
	</repositories>
<!-- 	<pluginRepositories> -->
<!-- 		<pluginRepository> -->
<!-- 			<id>vaadin-snapshots</id> -->
<!-- 			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url> -->
<!-- 			<releases> -->
<!-- 				<enabled>false</enabled> -->
<!-- 			</releases> -->
<!-- 			<snapshots> -->
<!-- 				<enabled>true</enabled> -->
<!-- 			</snapshots> -->
<!-- 		</pluginRepository> -->
<!-- 	</pluginRepositories> -->







	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<!--
		  Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).
		  
		  For widgetset compilation, vaadin-client-compiler is automatically added on the
		  compilation classpath by vaadin-maven-plugin so normally there is no need for an
		  explicit dependency.
		-->
		<!--
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiler</artifactId>
			<version>${vaadin.version}</version>
			<scope>provided</scope>
		</dependency>
		-->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
			<version>${vaadin.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
<!-- 		<dependency> -->
<!-- 		   <groupId>org.vaadin.addons</groupId> -->
<!-- 		   <artifactId>jain-i18N</artifactId> -->
<!-- 		   <version>1.1.5</version> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 		   <groupId>de.steinwedel.vaadin.addon</groupId> -->
<!-- 		   <artifactId>messagebox</artifactId> -->
<!-- 		   <version>2.0.6</version> -->
<!-- 		</dependency> -->
		<!-- 
		<dependency>
		   <groupId>com.vaadin.addon</groupId>
		   <artifactId>beanvalidation-addon</artifactId>
		   <version>1.0.0</version>
		</dependency>
		 -->


		
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
<!-- 		<dependency> -->
<!--         	<groupId>ru.xpoft.vaadin</groupId> -->
<!--         	<artifactId>spring-vaadin-integration</artifactId> -->
<!--         	<version>1.8.3</version> -->
<!--     	</dependency> -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.6</version>
		</dependency>
<!-- 	<dependency> -->
<!--    <groupId>com.vaadin.addon</groupId> -->
<!--    <artifactId>jpacontainer</artifactId> -->
<!--    <version>3.2.0</version> -->
<!-- </dependency> -->


		<dependency>
			<groupId>com.serpics</groupId>
			<artifactId>system</artifactId>
			<version>${serpics.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>org.vaadin.spring</groupId> -->
<!-- 			<artifactId>spring-vaadin</artifactId> -->
<!-- 			<version>0.0.4.RELEASE</version> -->
<!-- 		</dependency> -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.serpics</groupId>
			<artifactId>serpics-vaadin</artifactId>
			<version>${serpics.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.serpics</groupId>
			<artifactId>serpics-smc</artifactId>
			<version>${serpics.version}</version>
		</dependency>
		<dependency>
			<groupId>com.serpics</groupId>
			<artifactId>rest-api</artifactId>
			<version>${serpics.version}</version>
		</dependency>
		<dependency>
			<groupId>com.serpics</groupId>
			<artifactId>scheduler</artifactId>
			<version>${serpics.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
	
	<plugin>
        <artifactId>maven-surefire-plugin</artifactId>
     	<version>${surefire-plugin.version}</version>
    	
	     <configuration>
	    	<useSystemClassLoader>false</useSystemClassLoader> 
	     </configuration>
        <executions>
          <execution>
            <id>default-test</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>		
   		<!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
			<!-- directory is cleaned properly -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/VAADIN/widgetsets</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<!-- <runTarget>mobilemail</runTarget> -->
					<!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This 
						way compatible with Vaadin eclipse plugin. -->
					<webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets</webappDirectory>
					<hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets</hostedWebapp>
					<noServer>true</noServer>
					<!-- Remove draftCompile when project is ready -->
					<draftCompile>false</draftCompile>
					<compileReport>true</compileReport>
					<style>OBF</style>
					<strict>true</strict>
					<runTarget>http://localhost:8080/</runTarget>
				</configuration>
				<executions>
					<execution>
						<configuration></configuration>
						<goals>
							<goal>clean</goal>
							<goal>resources</goal>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile-theme</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
			</plugin>
		<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-javadoc-plugin</artifactId>
		        <version>2.10.3</version>
		         <configuration>
		<!--           <stylesheetfile>${basedir}/src/main/javadoc/stylesheet.css</stylesheetfile> -->
		          <show>public</show>
		        </configuration>
		      </plugin>	
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>vaadin-maven-plugin</artifactId>
										<versionRange>[7.1.3,)</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>update-widgetset</goal>
											<goal>compile</goal>
											<goal>update-theme</goal>
											<goal>compile-theme</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>

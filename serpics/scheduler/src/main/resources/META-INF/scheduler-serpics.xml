<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:data="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/data/jpa
http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<context:component-scan base-package="com.serpics.scheduler"></context:component-scan>
	<data:repositories base-package="com.serpics.scheduler.repositories"
		base-class="com.serpics.core.data.RepositoryImpl" />

	<bean id="quartzDbInitializer"
		class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
		<property name="dataSource" ref="dataSource" />
		<property name="enabled" value="true" />
		<property name="databasePopulator">
			<bean
				class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
				<property name="continueOnError" value="true" />
				<property name="ignoreFailedDrops" value="true" />
				<property name="sqlScriptEncoding" value="UTF-8" />
				<property name="scripts">
					<array>
						<value type="org.springframework.core.io.Resource">
							classpath:/META-INF/script_db/${com.serpics.scheduler.scriptInit}
						</value>
					</array>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="springJobFactory" class="com.serpics.scheduler.job.JobFactory" />
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="false" destroy-method="destroy">
		<property name="autoStartup" value="true" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="waitForJobsToCompleteOnShutdown"
			value="${com.serpics.scheduler.waitForJobsToCompleteOnShutdown}" />
		<property name="overwriteExistingJobs" value="true" />
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<!-- <property name="transactionManager"> -->
		<!-- <ref bean="transactionManager"/> -->
		<!-- </property> -->
		<property name="jobFactory">
			<ref bean="springJobFactory" />
		</property>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.jobStore.class">${com.serpics.scheduler.jobStore}</prop>
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">${com.serpics.scheduler.driverDelegateClass}</prop>
			</props>
		</property>
		<property name="globalJobListeners">
			<list>
				<bean class="com.serpics.scheduler.listener.SchedulerJobListener" />
			</list>
		</property>
		<property name="globalTriggerListeners">
			<list>
				<bean class="com.serpics.scheduler.listener.SchedulerTriggerListener" />
			</list>
		</property>
	</bean>

</beans>    
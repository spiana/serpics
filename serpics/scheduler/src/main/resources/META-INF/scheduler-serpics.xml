<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:data="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/data/jpa
http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<context:component-scan base-package="com.serpics.scheduler"></context:component-scan>
	<data:repositories base-package="com.serpics.scheduler.repositories"
		base-class="com.serpics.core.data.RepositoryImpl" />
	
	<!-- Specification -->
	<bean name="defaultStoreJobDetailsSpecification" class="com.serpics.scheduler.specification.StoreJobDetailsSpecification"/>
	<bean name="defaultSystemJobDetailsSpecification" class="com.serpics.scheduler.specification.SystemJobDetailsSpecification"/>
	
	<!-- Interceptor -->
	<bean name="storeJobDetailsSaveInterceptor"
		class="com.serpics.scheduler.interceptor.StoreJobDetailsSaveInterceptor" />
		
		<bean name="storeJobDetailsSaveMapping" class="com.serpics.core.data.InterceptorMapping">
		<property name="targetEntity" value="com.serpics.scheduler.model.StoreJobDetails" />
		<property name="order" value="10" />
		<property name="interceptor" ref="storeJobDetailsSaveInterceptor" />
	</bean>
	
	<bean name="systemJobDetailsSaveInterceptor"
		class="com.serpics.scheduler.interceptor.SystemJobDetailsSaveInterceptor" />
		
		<bean name="systemJobDetailsSaveMapping" class="com.serpics.core.data.InterceptorMapping">
		<property name="targetEntity" value="com.serpics.scheduler.model.SystemJobDetails" />
		<property name="order" value="10" />
		<property name="interceptor" ref="systemJobDetailsSaveInterceptor" />
	</bean>
	
	<!-- Quartz Configuration  Disable for RAMJOBSTORE-->
	<bean id="quartzDbInitializer"
		class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
		<property name="dataSource" ref="dataSource" />
		<property name="enabled" value="false" /> 
		<property name="databasePopulator">
			<bean
				class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
				<property name="continueOnError" value="true" />
				<property name="ignoreFailedDrops" value="true" />
				<property name="sqlScriptEncoding" value="UTF-8" />
				<property name="scripts">
					<array>
						<value type="org.springframework.core.io.Resource">
							classpath:/META-INF/script_db/${com.serpics.scheduler.scriptInit}
						</value>
					</array>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="springJobFactory" class="com.serpics.scheduler.job.JobFactory" />
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="false" destroy-method="destroy">
		<property name="autoStartup" value="${com.serpics.scheduler.autostart}" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="waitForJobsToCompleteOnShutdown"
			value="${com.serpics.scheduler.waitForJobsToCompleteOnShutdown}" />
		<property name="overwriteExistingJobs" value="true" />
<!-- 		<property name="dataSource"> -->
<!-- 			<ref bean="dataSource" /> -->
<!-- 		</property> -->
		<!-- <property name="transactionManager"> -->
		<!-- <ref bean="transactionManager"/> -->
		<!-- </property> -->
		<property name="jobFactory">
			<ref bean="springJobFactory" />
		</property>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.jobStore.class">${com.serpics.scheduler.jobStore}</prop>
				<prop key="org.quartz.threadPool.threadCount">${org.quartz.threadPool.threadCount}</prop>
				<prop key="org.quartz.threadPool.threadPriority">${org.quartz.threadPool.threadPriority}</prop>
				<prop key="org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread">true</prop>
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
			
<!-- 				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop> -->
<!-- 				<prop key="org.quartz.jobStore.driverDelegateClass">${com.serpics.scheduler.driverDelegateClass}</prop> -->
			</props>
		</property>
		<property name="globalJobListeners">
			<list>
				<bean class="com.serpics.scheduler.listener.SchedulerJobListener" />
			</list>
		</property>
		<property name="globalTriggerListeners">
			<list>
				<bean class="com.serpics.scheduler.listener.SchedulerTriggerListener" />
			</list>
		</property>
	</bean>

	<bean id="schedulerInitializer" class ="com.serpics.scheduler.listener.SchedulerInitializerListener"/>
</beans>    